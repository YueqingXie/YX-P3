[{"/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/index.js":"1","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/App.js":"2","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BeforeAdd.js":"3","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BeforeList.js":"4","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/home.js":"5","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BookList1.js":"6","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/AddBook.js":"7","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BookSections.js":"8"},{"size":486,"mtime":1610920314000,"results":"9","hashOfConfig":"10"},{"size":1611,"mtime":1611009534000,"results":"11","hashOfConfig":"10"},{"size":1128,"mtime":1611007244000,"results":"12","hashOfConfig":"10"},{"size":1132,"mtime":1611009097000,"results":"13","hashOfConfig":"10"},{"size":1570,"mtime":1611008950000,"results":"14","hashOfConfig":"10"},{"size":1896,"mtime":1611009870000,"results":"15","hashOfConfig":"10"},{"size":3703,"mtime":1611008452000,"results":"16","hashOfConfig":"10"},{"size":693,"mtime":1611009640000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"gk50qp",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/index.js",[],["40","41"],"/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/App.js",[],"/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BeforeAdd.js",["42"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass BeforeAdd extends Component {\n    state = {\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state.password); \n    }\n    render() {\n        if( this.state.password == \"8918308\"){\n            return <Redirect to = '/zuojia'/>\n        }\n\n        return (\n            <section>\n\n        <body>\n        <div className=\"center container section\" id=\"hhh\">\n            <img src=\"img/1.png\" alt=\"\" ></img>\n            <p>Enter Password</p>\n            <div className=\"center\">\n            <form onSubmit={this.handleSubmit} className=\"transparent center\" id=\"pwform\">\n                <div className=\"input-field\">\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n            </form>\n            </div>\n        </div>\n        </body>\n\n  \n            </section>\n        )\n    }\n}\n\n\n\n\nexport default BeforeAdd;","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BeforeList.js",["43"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass BeforeList extends Component {\n    state = {\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state.password); \n    }\n    render() {\n        if( this.state.password == \"8918308Ou@\"){\n            return <Redirect to = '/duzhe'/>\n        }\n\n        return (\n            <section>\n\n        <body>\n        <div className=\"center container section\" id=\"hhh\">\n            <img src=\"img/1.png\" alt=\"\" ></img>\n            <p>Enter Password</p>\n            <div className=\"center\">\n            <form onSubmit={this.handleSubmit} className=\"transparent center\" id=\"pwform\">\n                <div className=\"input-field\">\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n            </form>\n            </div>\n        </div>\n        </body>\n\n  \n            </section>\n        )\n    }\n}\n\n\n\n\nexport default BeforeList;","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/home.js",[],"/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BookList1.js",["44","45"],"import React, {useState}  from 'react';\nimport { gql, useQuery } from '@apollo/client';\n// import BookDetails from './BookDetails';\n\nconst getBooksQuery = gql`\n  {\n    books {\n      name\n      genre\n      id\n    }\n  }\n`;\n\nfunction DisplayBooks(loading, data){\n  const [state, setState] = useState('');\n  if(loading){\n      return( <option disabled>Loading books</option> );\n  }else{\n      return data.books.map(book => {\n        return(\n          <li key={ book.id } onClick={ (e) => setState({ selected: book.id }) }>{ book.name } - { book.genre }</li>\n        );\n      })\n  }\n}\n\nconst BookList1 = () => {\n  const { loading, error, data } = useQuery(getBooksQuery);\n  console.log(data);\n      return (\n        <div>\n          <ul id=\"book-list\">\n            { DisplayBooks(loading, data) }\n          </ul>\n          {/* <BookDetails  /> */}\n<div className=\"right\">\n    <li id=\"nn\"><a href=\"/duzhe\" className=\"black-text\">Back</a></li>      \n        </div>\n          \n        </div>\n        \n        \n      )\n}\n\nexport default BookList1;\n\n\n// import React from 'react';\n// import { gql, useQuery } from '@apollo/client';\n// import BookDetails from './BookDetails';\n\n// const getBooksQuery = gql`\n//   {\n//     books {\n//       name\n//       id\n//     }\n//   }\n// `;\n\n// const displayBooks = (loading, data) =>{\n\n//   if(loading){\n//       return( <option disabled>Loading books</option> );\n//   }else{\n//       return data.books.map(book => {\n//           return (<li key={ book.id }>{ book.name }</li>) \n//       })\n//   }\n// }\n\n// const BookList = () => {\n\n//   const { loading, error, data } = useQuery(getBooksQuery);\n//   console.log(data);\n\n//       return (\n//         <div>\n//           <ul id=\"book-list\">\n//             { displayBooks(loading, data) }\n//           </ul>\n          \n//           <BookDetails />\n//         </div>\n          \n//       )\n\n// }\n\n// export default BookList;\n","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/AddBook.js",["46","47","48","49","50"],"import React, {useState} from 'react';\nimport {gql, useQuery, useMutation} from '@apollo/client';\n\nconst getBooksQuery = gql`\n  {\n    books {\n      name\n      id\n    }\n  }\n`;\nconst getAuthorsQuery = gql`\n    {\n        authors {\n            name\n            id\n        }\n    }\n`;\nconst addBookMutation = gql`\n    mutation AddBook($name: String!, $genre: String!, $authorId: ID!){\n        addBook(name: $name, genre: $genre, authorId: $authorId){\n            name\n            id\n        }\n    }\n`;\n\nconst displayAuthors = (loading, data) =>{\n    if(loading){\n        return( <option disabled>Loading authors</option> );\n    }else{\n        return data.authors.map(author =>{\n            return (<option key={author.id} value={author.id}>{author.name}</option>)\n        })\n    }\n}\nconst AddBook =() =>{\n    const [name, setName] = useState('');\n    const [genre, setGenre] = useState('');\n    const [authorId, setAuthorId] = useState('');\n    const { loading, data } = useQuery(getAuthorsQuery);\n    const [addBookMut] = useMutation(addBookMutation);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        addBookMut({\n            variables: {\n              name: name,\n              genre: genre,\n            //   authorId: authorId,\n              authorId: \"600380347ffed61e7b7618ef\",\n            },\n            refetchQueries: [{ query: getBooksQuery }]\n        });\n    };\n    return(\n        <div className=\"center container section\" id=\"hhh\">\n        <form id=\"add-book\" onSubmit={handleSubmit}>\n            <div className=\"field\">\n                <label>Chapter name:</label>\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n            </div>\n            <div className=\"field\">\n                <label>Content:</label>\n                <input type=\"text\" value={genre} onChange={(e) => setGenre(e.target.value)}  />\n            </div>\n            {/* <div className=\"field\">\n                <label>Author:</label>\n                <select value={authorId} onChange={(e) => setAuthorId(e.target.value)} >\n                    <option>Select author</option>\n                    { displayAuthors(loading, data) }\n                </select>\n            </div> */}\n            <div className=\"btnn\">\n                <button>Add</button>\n\n            </div>\n        </form>\n        </div>\n    )\n}\n\nexport default AddBook\n\n\n// import React from 'react';\n// import { gql, useQuery } from '@apollo/client';\n\n// const getAuthorsQuery = gql`\n//     {\n//         authors {\n//             name\n//             id\n//         }\n//     }\n// `;\n\n// function DisplayAuthors(){\n//     const { loading, error, data } = useQuery(getAuthorsQuery);\n//     if(loading){\n//         return( <option disabled>Loading authors</option> );\n//     } else {\n//         return data.authors.map(author => {\n//             return( <option key={ author.id } value={author.id}>{ author.name }</option> );\n//         });\n//     }    \n// }\n\n// function AddBook() {\n//     return (\n//         <form id=\"add-book\">\n//             <div className=\"field\">\n//                 <label>Book name:</label>\n//                 <input type=\"text\" />\n//             </div>\n//             <div className=\"field\">\n//                 <label>Genre:</label>\n//                 <input type=\"text\" />\n//             </div>\n//             <div className=\"field\">\n//                 <label>Author:</label>\n//                 <select>\n//                     <option>Select author</option>                       \n//                     { DisplayAuthors() }\n//                 </select>\n//             </div>\n//             <button>+</button>\n//         </form>\n//     )      \n// }\n\n// export default AddBook;\n","/Users/yueqing/Desktop/YX/new/YX-Web/_Projects_/3/_newdeploy/graphQL/client/src/components/BookSections.js",["51"],"import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\n\n\nclass BookSections extends Component {\n    // state = {\n    //     password: ''\n    // }\n    // handleChange = (e) => {\n    //     this.setState({\n    //         [e.target.id]: e.target.value\n    //     })\n    // }\n    // handleSubmit = (e) => {\n    //     e.preventDefault();\n    //     console.log(this.state.password); \n    // }\n    render() {\n\n\n        return (\n            <section>\n\n        <body>\n            <li id=\"n\"><a href=\"/duzhe1\" className=\"black-text\">1 - 萌新中单 vs 冠军野王</a></li>\n        </body>\n\n  \n            </section>\n        )\n    }\n}\n\n\n\n\nexport default BookSections;",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":20,"column":33,"nodeType":"58","messageId":"59","endLine":20,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":20,"column":33,"nodeType":"58","messageId":"59","endLine":20,"endColumn":35},{"ruleId":"60","severity":1,"message":"61","line":16,"column":10,"nodeType":"62","messageId":"63","endLine":16,"endColumn":15},{"ruleId":"60","severity":1,"message":"64","line":29,"column":20,"nodeType":"62","messageId":"63","endLine":29,"endColumn":25},{"ruleId":"60","severity":1,"message":"65","line":29,"column":7,"nodeType":"62","messageId":"63","endLine":29,"endColumn":21},{"ruleId":"60","severity":1,"message":"66","line":41,"column":12,"nodeType":"62","messageId":"63","endLine":41,"endColumn":20},{"ruleId":"60","severity":1,"message":"67","line":41,"column":22,"nodeType":"62","messageId":"63","endLine":41,"endColumn":33},{"ruleId":"60","severity":1,"message":"68","line":42,"column":13,"nodeType":"62","messageId":"63","endLine":42,"endColumn":20},{"ruleId":"60","severity":1,"message":"69","line":42,"column":22,"nodeType":"62","messageId":"63","endLine":42,"endColumn":26},{"ruleId":"60","severity":1,"message":"70","line":2,"column":10,"nodeType":"62","messageId":"63","endLine":2,"endColumn":18},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'displayAuthors' is assigned a value but never used.","'authorId' is assigned a value but never used.","'setAuthorId' is assigned a value but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]